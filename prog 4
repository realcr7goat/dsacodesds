#include<stdio.h>
#include<stdlib.h>

struct node {
    int data;
    struct node *next;
};

struct node *front = NULL;
struct node *rear = NULL;

void insert();
void delete();
void display();

void main() {
    int choice = 0;
    while(choice != 4) {
        printf("\nMain Menu\n");
        printf("1. Insert an element\n");
        printf("2. Delete an element\n");
        printf("3. Display the queue\n");
        printf("4. Exit\n");
        printf("\nEnter your choice: ");
        scanf("%d", &choice);
        
        switch(choice) {
            case 1:
                insert();
                break;
            case 2:
                delete();
                break;
            case 3:
                display();
                break;
            case 4:
                exit(0);
            default:
                printf("\nEnter a valid choice\n");
        }
    }
}

void insert() {
    struct node *ptr = (struct node*)malloc(sizeof(struct node));
    int item;

    if(ptr == NULL) {
        printf("\nOVERFLOW\n");
        return;
    } else {
        printf("\nEnter value: ");
        scanf("%d", &item);
        ptr->data = item;
        ptr->next = NULL;

        if(front == NULL) {
            front = ptr;
            rear = ptr;
        } else {
            rear->next = ptr;
            rear = ptr;
        }
        printf("\nValue inserted\n");
    }
}

void delete() {
    struct node *ptr;

    if(front == NULL) {
        printf("\nUNDERFLOW\n");
        return;
    } else {
        ptr = front;
        front = front->next;
        printf("\nDeleted element: %d\n", ptr->data);
        free(ptr);
    }
}

void display() {
    struct node *ptr = front;

    if(front == NULL) {
        printf("\nEmpty queue\n");
    } else {
        printf("\nPrinting values...\n");
        while(ptr != NULL) {
            printf("%d ", ptr->data);
            ptr = ptr->next;
        }
        printf("\n");
    }
}
